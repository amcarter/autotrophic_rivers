knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_knit$set(root.dir = '\\\\wsl.localhost/Ubuntu/home/alice/git/autotrophic_rivers/src/')
setwd('\\\\wsl.localhost/Ubuntu/home/alice/git/autotrophic_rivers/src/')
library(tidyverse)
library(rstan)
getwd()
source('stan_helpers.R', local = knitr::knit_global())
dat <- read_csv('../data/daily_sensor_and_nwis_data_auto.csv')
dd <- dat %>%
select(sitecode, date, variable, value) %>%
pivot_wider(names_from = variable, values_from = value)
sites <- unique(dd$sitecode)
md <- read_csv('../data/autotrophic_siteyears_daily_filled_data.csv')
md <- filter(md, sitecode %in% sites)
dd <- select(md, sitecode, Name, date = Date, DOY,
GPP_C_filled, ER_C_filled, slope) %>%
left_join(dd, by = c('sitecode', 'date'))
ss <- dd %>%
filter(sitecode == sites[6]) %>%
# ggplot(aes(date, GPP_C_filled)) + geom_line()
arrange(date) %>%
select(sitecode, Name, date, DOY, GPP_C = GPP_C_filled, ER_C = ER_C_filled,
depth = Depth_m, discharge = Discharge_m3s, DO_mgL, light = Light_PAR,
temp_C = WaterTemp_C, slope) %>%
mutate(across(c(-sitecode, -Name, -date, -DOY), zoo::na.approx, na.rm = F),
litter = case_when(DOY >= 288 & DOY <= 307 ~ 25,
TRUE ~ 0),
tau_mgm2 = 10^3 * depth * slope,
light = light/max(light))
# Set litterfall to be 20 days from Oct 5th - 24th with the total annual litter = 500 gC/m2/y, so daily litterfall = 25 gC/m2/d
ss %>%
select(date, temp = temp_C, discharge, GPP_C, litter) %>%
pivot_longer(-date, names_to = 'variable', values_to = 'value') %>%
ggplot(aes(date, value, col = variable)) +
geom_line() +
facet_wrap(.~variable, nrow = 4, scales = 'free_y')
rlnorm(log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
rlnorm(1, log(100), 0.01)
ndays <- nrow(ss) # number of days
nweight = 5       # number of antecedent intervals
# define parameters
C0 = 100
K20 = .01      # Heterotrophic respiration at 20 C
beta_s = 0.8   # Percent removal of organic carbon from max storm
tau0 = quantile(ss$tau_mgm2, .75)
beta_p = .5
w = rep(1/nweight, nweight)
sigma_proc = .01 # lognormally distributed, so this is a % error
sigma_obs = 0.08
# Constants
Ea = 0.63              # activation energy for heterotrophic respiration
k_b = 8.6173 * 10^-5  # Boltzmann's constant in eV/K
ARf = 0.44              # the fraction of GPP respired by autotrophs
# Process Model:
# Antecedent Productivity:
Pant = ss$GPP_C
for (i in (nweight+1):ndays){
Pvec <- numeric(nweight)
for(j in 1:nweight){
Pvec[j] <- w[j]*ss$GPP_C[i-j]
}
Pant[i]<-sum(Pvec)
}
# Calculate shear stress ratio as a function of the minimum stress to cause a disturbance
ss$ss = if_else(ss$tau_mgm2 >= tau0, ((ss$tau_mgm2 - tau0)/(max(ss$tau_mgm2) - tau0))^2, 0)
ss$K = K20 * exp(Ea/k_b *(1/(ss$temp_C + 273) - 1/293))
ss$C = rep(C0, ndays)
ss$AR = -ARf * ss$GPP_C
ss$HR_d = rep(-ss$K[1] * C0, ndays)
ss$HR_p = rep(-beta_p * ss$GPP_C[1], ndays)
Chat = numeric()
Chat[1] = C0
for(i in 2:ndays){
Chat[i] = Chat[i-1] * (1 - beta_s * ss$ss[i]) + ss$HR_d[i-1] + ss$litter[i]
ss$C[i] = exp(rnorm(1, log(Chat[i]), sigma_proc))
ss$HR_d[i] = -ss$K[i] * ss$C[i]
ss$HR_p[i] = -beta_p * Pant[i]
}
# observation model:
ss$R = ss$AR + ss$HR_d + ss$HR_p
ss$R_obs = rnorm(ndays, ss$R, sigma_obs)
ss %>% select(date, GPP_C, discharge, R, C, HR_p, HR_d, AR, litter )%>%
pivot_longer( -date, names_to = 'var', values_to = 'value') %>%
ggplot(aes(date, value, col = var)) +
geom_line()+
facet_wrap(.~var, scales = 'free_y', ncol = 2)
S <- ss
ss <- ss[1:30,]
stan_dat <- list(ndays = nrow(ss), nweights = nweight,
R_obs = ss$ER_C, P = ss$GPP_C, C0 = 100,
temp = ss$temp_C, tau = ss$tau_mgm2, litter = ss$litter)
mod <- stan('SAM/stan/SAM_detC_1.stan',
data = stan_dat,
chains = 4,  cores = 4,
warmup = 500, iter = 1000)
rlnorm(log(100), .01)
log(100)
1/sqrt(2 * pi())
1/sqrt(2 * pi)
1/(sqrt(2 * pi)* 0.01)
1/(sqrt(2 * pi)* 0.01*100)
1/(sqrt(2 * pi)* 0.01*100)*exp(-1/2)
1/(sqrt(2 * pi)* 0.01*100)*exp(-1/2* (log(log(100)) - log(100))
)
1/(sqrt(2 * pi)* 0.01*100)*exp(-1/2 *((log(100) - log(100))/0.01)^2)
1/(sqrt(2 * pi)* 0.01*99)*exp(-1/2 *((log(99) - log(100))/0.01)^2)
1/(sqrt(2 * pi)* 0.02*99)*exp(-1/2 *((log(99) - log(100))/0.02)^2)
1/(sqrt(2 * pi)* 0.02*100)*exp(-1/2 *((log(100) - log(100))/0.02)^2)
mod <- stan('SAM/stan/SAM_detC_1.stan',
data = stan_dat,
chains = 4,  cores = 4,
warmup = 500, iter = 1000)
mod <- stan('SAM/stan/SAM_detC_1.stan',
data = stan_dat,
chains = 4,  cores = 4,
warmup = 500, iter = 1000)
traceplot(mod, ncol = 2, pars=c( 'beta_s', 'tau0', 'beta_p', 'w',
'sigma_obs', 'sigma_proc'))
plot_post_sim(mod, pars = c( 'beta_s', 'tau0', 'beta_p', 'w',
'sigma_obs', 'sigma_proc'),
vals = c( beta_s, tau0, beta_p, w, sigma_obs, sigma_proc))
