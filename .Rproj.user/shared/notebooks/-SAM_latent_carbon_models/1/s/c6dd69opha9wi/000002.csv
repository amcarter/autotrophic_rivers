"0","cat(read_lines('SAM/stan/SAM_detC_1.stan'), sep = '\n')
"
"1","//"
"1","
"
"1","// Stan program "
"1","
"
"1","// Respiration model with:"
"1","
"
"1","// - Stochastic antecedent GPP"
"1","
"
"1","// - Latent state for detrital carbon"
"1","
"
"1","// "
"1","
"
"1","// A Carter"
"1","
"
"1","// Created: 4/2/22"
"1","
"
"1","// Updated: "
"1","
"
"1","//"
"1","
"
"1",""
"1","
"
"1","data {"
"1","
"
"1","  int<lower=0> ndays;           // length of time series"
"1","
"
"1","  int<lower=0> nweights;        // number of antecedent intervals"
"1","
"
"1","  vector[ndays] R_obs;          // observed respiration (gC/m2/d)"
"1","
"
"1","  vector<lower=0>[ndays] P;     // observed GPP (gC/m2/d)"
"1","
"
"1","  vector[ndays] temp;           // water temperature (C)"
"1","
"
"1","  vector<lower=0>[ndays] tau;   // Shear stress (mg/m2) = f(depth, width, slope)"
"1","
"
"1","  vector<lower=0>[ndays] litter;// terrestrial litter input (gC/m2/d)"
"1","
"
"1","}"
"1","
"
"1",""
"1","
"
"1","transformed data {"
"1","
"
"1","  vector<lower=0>[ndays] temp_K;// temperature (K)"
"1","
"
"1","  vector<upper=0>[ndays] AR;    // Autotrophic respiration"
"1","
"
"1","  vector[nweights] w_prior;     // simplex prior"
"1","
"
"1","  real<lower=0> tau_max;        // max shear stress"
"1","
"
"1","  real<lower=0> tau_prior;      // prior value on tau0 - set using a quantile on tau"
"1","
"
"1","  "
"1","
"
"1","  //constants:"
"1","
"
"1","  real AR_f; // fraction of autotrophic respiration"
"1","
"
"1","  real E_a;  // activation energy for carbon decay (eV)"
"1","
"
"1","  real k_b;  // boltzmann's constant in eV/K"
"1","
"
"1","  real K_20;          // decay rate at 20C (1/day)"
"1","
"
"1","  "
"1","
"
"1","  AR_f = 0.44;"
"1","
"
"1","  E_a = 0.63;"
"1","
"
"1","  k_b = 8.6173 * 10^(-5);"
"1","
"
"1","  K_20 = 0.01;"
"1","
"
"1","  "
"1","
"
"1","  temp_K = temp + 273;"
"1","
"
"1","  AR = -AR_f * P;"
"1","
"
"1","  for(i in 1:nweights){"
"1","
"
"1","    w_prior[i] = 1.0/nweights;"
"1","
"
"1","  }"
"1","
"
"1","  tau_max = max(tau);"
"1","
"
"1","  tau_prior = sort_asc(tau)[ndays/2];"
"1","
"
"1","}"
"1","
"
"1","    "
"1","
"
"1","parameters {"
"1","
"
"1","  real<lower=0> C0;            // initial detrital carbon in the system (g/m2)"
"1","
"
"1","  vector<lower=0>[ndays] C;    // detrital carbon at each timestep (g/m2)"
"1","
"
"1","  real<lower=0,upper=1> beta_s;// percent carbon lost at max shear stress"
"1","
"
"1","  real<lower=0> tau0;          // minimum shear stress for bed disturbance (mg/m2)"
"1","
"
"1","  real<lower=0> beta_p;        // coefficient on antecedent primary productivity"
"1","
"
"1","  simplex[nweights] w;         // weights on intervals of antecedent GPP"
"1","
"
"1","  real<lower=0> sigma_proc;    // process error"
"1","
"
"1","  real<lower=0> sigma_obs;     // observation error"
"1","
"
"1","}"
"1","
"
"1",""
"1","
"
"1","transformed parameters {"
"1","
"
"1","  vector<lower=0>[ndays] Pant;    // antecedent productivity"
"1","
"
"1","  vector<lower=0>[ndays] ss_ratio;// squared ratio of shear stress in loss term"
"1","
"
"1","  vector<lower=0>[ndays] K;       // decay rate per day"
"1","
"
"1","  "
"1","
"
"1","  Pant[1:nweights] = P[1:nweights];"
"1","
"
"1","  "
"1","
"
"1","  for(i in (nweights + 1):ndays){"
"1","
"
"1","    vector[nweights] Pvec;"
"1","
"
"1","    for(j in 1:nweights){"
"1","
"
"1","      Pvec[j] = w[j]*P[i-j];"
"1","
"
"1","    }"
"1","
"
"1","    Pant[i] = sum(Pvec);"
"1","
"
"1","  }"
"1","
"
"1",""
"1","
"
"1","  for(i in 1:ndays){"
"1","
"
"1","    if(tau[i] < tau0){"
"1","
"
"1","      ss_ratio[i] = 0;"
"1","
"
"1","    } else {"
"1","
"
"1","      ss_ratio[i] = ((tau[i] - tau0)/(tau_max - tau0))^2;"
"1","
"
"1","    }"
"1","
"
"1","  }"
"1","
"
"1","  "
"1","
"
"1","  K = K_20 * exp((E_a/k_b)*(1.0./temp_K - 1.0/293.0));"
"1","
"
"1","  "
"1","
"
"1","}"
"1","
"
"1",""
"1","
"
"1","model {"
"1","
"
"1","  vector[ndays] R;    // actual respiration (gC/m2/d)"
"1","
"
"1","  vector[ndays] HR_d; // respiration of detrital carbon"
"1","
"
"1","  vector[ndays] HR_p; // respiration of algal material"
"1","
"
"1","  vector[ndays] C_hat;// Carbon before process error"
"1","
"
"1","  "
"1","
"
"1","  // process model"
"1","
"
"1","  C[1] ~ lognormal(log(C0), sigma_proc);"
"1","
"
"1","  C_hat[1] = C[1];"
"1","
"
"1","  HR_d[1] = -K[1] * C[1];"
"1","
"
"1","  HR_p = -beta_p * Pant;"
"1","
"
"1","  print(""C0 = "", C0, ""C_hat = "", C_hat[1], "" beta_s = "", beta_s, "" ss = "", ss_ratio[1], "" K20 = "", K_20, K[1]);"
"1","
"
"1","  "
"1","
"
"1","  for(i in 2:ndays){"
"1","
"
"1","    C_hat[i] = (C[i-1] + HR_d[i-1]) * (1 - beta_s * ss_ratio[i]) + litter[i];"
"1","
"
"1","    C[i] ~ lognormal(log(C_hat[i]), sigma_proc);"
"1","
"
"1","    HR_d[i] = -K[i] * C[i];"
"1","
"
"1","  }"
"1","
"
"1",""
"1","
"
"1","  // observation model"
"1","
"
"1","  R = AR + HR_d + HR_p;"
"1","
"
"1","  R_obs ~ normal(R, sigma_obs);"
"1","
"
"1","  "
"1","
"
"1","  // priors"
"1","
"
"1","  C0 ~ normal(100, 5);"
"1","
"
"1","  C[2:ndays] ~ lognormal(log(C[1:(ndays-1)]), 0.75);"
"1","
"
"1","  K_20 ~ normal(1, 0.1)T[0,]; "
"1","
"
"1","  beta_s ~ beta(2.7, 1);"
"1","
"
"1","  tau0 ~ normal(tau_prior, 1);"
"1","
"
"1","  beta_p ~ normal(.5, .5)T[0,];"
"1","
"
"1","  w ~ dirichlet(w_prior);"
"1","
"
"1","  sigma_proc ~ normal(0, 0.02)T[0,];"
"1","
"
"1","  sigma_obs ~ normal(0.08, 0.02)T[0,];"
"1","
"
"1","}"
"1","
"
